import{g as v,a$ as b,h as C,p as l,ar as m,b0 as c,b1 as k,b2 as x,b3 as S,f as u,R as n,aL as i}from"./index-4CsWHK-T.js";const h=l({defaults:Object,disabled:Boolean,reset:[Number,String],root:[Boolean,String],scoped:Boolean},"VDefaultsProvider"),B=v(!1)({name:"VDefaultsProvider",props:h(),setup(e,s){let{slots:o}=s;const{defaults:t,disabled:a,reset:r,root:d,scoped:g}=b(e);return C(t,{reset:r,root:d,scoped:g,disabled:a}),()=>o.default?.()}});function f(e){return m(()=>{const s=[],o={};if(e.value.background)if(c(e.value.background)){if(o.backgroundColor=e.value.background,!e.value.text&&k(e.value.background)){const t=x(e.value.background);if(t.a==null||t.a===1){const a=S(t);o.color=a,o.caretColor=a}}}else s.push(`bg-${e.value.background}`);return e.value.text&&(c(e.value.text)?(o.color=e.value.text,o.caretColor=e.value.text):s.push(`text-${e.value.text}`)),{colorClasses:s,colorStyles:o}})}function P(e,s){const o=u(()=>({text:n(e)?e.value:s?e[s]:null})),{colorClasses:t,colorStyles:a}=f(o);return{textColorClasses:t,textColorStyles:a}}function p(e,s){const o=u(()=>({background:n(e)?e.value:s?e[s]:null})),{colorClasses:t,colorStyles:a}=f(o);return{backgroundColorClasses:t,backgroundColorStyles:a}}const $=l({rounded:{type:[Boolean,Number,String],default:void 0},tile:Boolean},"rounded");function N(e){let s=arguments.length>1&&arguments[1]!==void 0?arguments[1]:i();return{roundedClasses:u(()=>{const t=n(e)?e.value:e.rounded,a=n(e)?e.value:e.tile,r=[];if(t===!0||t==="")r.push(`${s}--rounded`);else if(typeof t=="string"||t===0)for(const d of String(t).split(" "))r.push(`rounded-${d}`);else(a||t===!1)&&r.push("rounded-0");return r})}}const D=l({border:[Boolean,Number,String]},"border");function R(e){let s=arguments.length>1&&arguments[1]!==void 0?arguments[1]:i();return{borderClasses:u(()=>{const t=n(e)?e.value:e.border,a=[];if(t===!0||t==="")a.push(`${s}--border`);else if(typeof t=="string"||t===0)for(const r of String(t).split(" "))a.push(`border-${r}`);return a})}}const V=l({elevation:{type:[Number,String],validator(e){const s=parseInt(e);return!isNaN(s)&&s>=0&&s<=24}}},"elevation");function E(e){return{elevationClasses:u(()=>{const o=n(e)?e.value:e.elevation,t=[];return o==null||t.push(`elevation-${o}`),t})}}export{B as V,V as a,$ as b,R as c,E as d,N as e,P as f,f as g,D as m,p as u};
